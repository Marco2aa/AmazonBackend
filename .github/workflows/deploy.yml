name: Deploy to EC2 (simple SSH)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
          coverage: none

      - name: Composer install (prod)
        env:
          COMPOSER_MEMORY_LIMIT: -1
          SYMFONY_SKIP_AUTO_SCRIPTS: 1
          APP_ENV: prod
        run: composer install --no-dev --prefer-dist --no-progress --optimize-autoloader --no-scripts

      - name: Pack release
        run: |
          RELEASE="release-${{ github.sha }}"
          mkdir -p .deploy/$RELEASE
          rsync -a \
            --exclude ".git" --exclude ".github" \
            --exclude "node_modules" \
            --exclude "var" \
            ./ .deploy/$RELEASE/
          rm -f .deploy/$RELEASE/.env* || true
          tar -czf $RELEASE.tar.gz -C .deploy $RELEASE
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV

      # Écrit la clé privée depuis le secret (en supprimant d'éventuels \r Windows)
      - name: Write SSH key (strip CR)
        run: |
          mkdir -p ~/.ssh
          printf "%s" "${{ secrets.EC2_SSH_KEY }}" | tr -d '\r' > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

      # Test simple : si ça passe, la suite passera
      - name: SSH self-test
        run: |
          ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
              -i ~/.ssh/deploy_key \
              ubuntu@${{ secrets.EC2_HOST }} 'echo OK-from-EC2 && whoami && hostname'

      - name: Ensure remote dirs
        run: |
          ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
              -i ~/.ssh/deploy_key \
              ubuntu@${{ secrets.EC2_HOST }} \
              'mkdir -p /var/www/aflokkat-marc.store/releases'

      - name: Upload tarball to EC2
        run: |
          scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
              -i ~/.ssh/deploy_key \
              ${RELEASE}.tar.gz \
              ubuntu@${{ secrets.EC2_HOST }}:/var/www/aflokkat-marc.store/releases/

      - name: Remote deploy switch
        run: |
          ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
              -i ~/.ssh/deploy_key \
              ubuntu@${{ secrets.EC2_HOST }} \
              "/var/www/aflokkat-marc.store/deploy_switch.sh /var/www/aflokkat-marc.store/releases/${RELEASE}.tar.gz"
