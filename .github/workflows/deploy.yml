name: Deploy to EC2 (no Docker)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
          coverage: none

      - name: Composer install (prod)
        env:
          COMPOSER_MEMORY_LIMIT: -1
          SYMFONY_SKIP_AUTO_SCRIPTS: 1
          APP_ENV: prod
        run: composer install --no-dev --prefer-dist --no-progress --optimize-autoloader --no-scripts

      # Décommente si tu as des assets à builder (Vite/Webpack)
      # - name: Setup Node
      #   uses: actions/setup-node@v4
      #   with: { node-version: '20' }
      # - name: Build assets
      #   run: |
      #     npm ci
      #     npm run build

      - name: Pack release
        run: |
          RELEASE="release-${{ github.sha }}"
          mkdir -p .deploy/$RELEASE
          rsync -a \
            --exclude ".git" --exclude ".github" \
            --exclude "node_modules" \
            --exclude "var" \
            ./. .deploy/$RELEASE/
          # NE PAS embarquer les secrets locaux
          rm -f .deploy/$RELEASE/.env* || true
          tar -czf $RELEASE.tar.gz -C .deploy $RELEASE
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV

      - name: Add EC2 host key
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Start ssh-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}
      
      - name: Prepare SSH folder
        run: |
          install -m 700 -d ~/.ssh

      - name: Add EC2 host key
        run: |
          ssh-keyscan -T 10 -H ${{ secrets.EC2_HOST }} 2>/dev/null | tee -a ~/.ssh/known_hosts >/dev/null
          chmod 644 ~/.ssh/known_hosts

      - name: Upload tarball to EC2
        run: |
          scp -o StrictHostKeyChecking=accept-new ${RELEASE}.tar.gz \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/aflokkat-marc.store/releases/

      - name: Remote deploy switch
        run: |
          ssh -o StrictHostKeyChecking=accept-new ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "/var/www/aflokkat-marc.store/deploy_switch.sh /var/www/aflokkat-marc.store/releases/${RELEASE}.tar.gz"